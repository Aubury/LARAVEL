{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","call","slice","name","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","PI","scale","drawImage","map","param","floor","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","maxRatio","pointer2","x1","y1","x2","y2","z1","sqrt","getMaxZoomRatio","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","factory"],"mappings":"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","file":"/js/cropper.js","sourcesContent":["/*!\n * Cropper.js v1.5.9\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-09-10T13:16:26.743Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"],"sourceRoot":""}